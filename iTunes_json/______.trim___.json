{
  "name": "\")) {",
  "appId": "\", \"\").trim();",
  "bundleId": "\", \"\").trim();",
  "subscriptions": [
    {
      "id": 1,
      "productId": "const subs = lines.slice(3).map((s, i) => ({"
    },
    {
      "id": 2,
      "productId": "id: i + 1,"
    },
    {
      "id": 3,
      "productId": "productId: s.trim(),"
    },
    {
      "id": 4,
      "productId": "}));"
    },
    {
      "id": 5,
      "productId": "return {"
    },
    {
      "id": 6,
      "productId": "name,"
    },
    {
      "id": 7,
      "productId": "appId,"
    },
    {
      "id": 8,
      "productId": "bundleId,"
    },
    {
      "id": 9,
      "productId": "subscriptions: subs,"
    },
    {
      "id": 10,
      "productId": "updatedAt: new Date().toISOString(),"
    },
    {
      "id": 11,
      "productId": "};"
    },
    {
      "id": 12,
      "productId": "});"
    },
    {
      "id": 13,
      "productId": "return apps;"
    },
    {
      "id": 14,
      "productId": "}"
    },
    {
      "id": 15,
      "productId": "// ========== 上传函数 =========="
    },
    {
      "id": 16,
      "productId": "async function uploadToGitHub(filePath, content) {"
    },
    {
      "id": 17,
      "productId": "const url = `https://api.github.com/repos/${GITHUB_CONFIG.username}/${GITHUB_CONFIG.repo}/contents/${filePath}`;"
    },
    {
      "id": 18,
      "productId": "const headers = {"
    },
    {
      "id": 19,
      "productId": "Authorization: `Bearer ${GITHUB_CONFIG.token}`,"
    },
    {
      "id": 20,
      "productId": "Accept: \"application/vnd.github+json\","
    },
    {
      "id": 21,
      "productId": "};"
    },
    {
      "id": 22,
      "productId": "// 检查 SHA（文件是否已存在）"
    },
    {
      "id": 23,
      "productId": "let sha = null;"
    },
    {
      "id": 24,
      "productId": "try {"
    },
    {
      "id": 25,
      "productId": "const check = new Request(url);"
    },
    {
      "id": 26,
      "productId": "check.method = \"GET\";"
    },
    {
      "id": 27,
      "productId": "check.headers = headers;"
    },
    {
      "id": 28,
      "productId": "const resp = await check.loadJSON();"
    },
    {
      "id": 29,
      "productId": "if (resp.sha) sha = resp.sha;"
    },
    {
      "id": 30,
      "productId": "} catch (_) {}"
    },
    {
      "id": 31,
      "productId": "// 上传（新增或更新）"
    },
    {
      "id": 32,
      "productId": "const req = new Request(url);"
    },
    {
      "id": 33,
      "productId": "req.method = \"PUT\";"
    },
    {
      "id": 34,
      "productId": "req.headers = headers;"
    },
    {
      "id": 35,
      "productId": "req.body = JSON.stringify({"
    },
    {
      "id": 36,
      "productId": "message: `Update ${filePath}`,"
    },
    {
      "id": 37,
      "productId": "content: Data.fromString(JSON.stringify(content, null, 2)).toBase64String(),"
    },
    {
      "id": 38,
      "productId": "sha: sha || undefined,"
    },
    {
      "id": 39,
      "productId": "});"
    },
    {
      "id": 40,
      "productId": "const res = await req.loadJSON();"
    },
    {
      "id": 41,
      "productId": "return res.content?.download_url || null;"
    },
    {
      "id": 42,
      "productId": "}"
    },
    {
      "id": 43,
      "productId": "// ========== 主流程 =========="
    },
    {
      "id": 44,
      "productId": "const apps = parseInput(rawInput);"
    },
    {
      "id": 45,
      "productId": "for (let app of apps) {"
    },
    {
      "id": 46,
      "productId": "const filePath = `${GITHUB_CONFIG.filePathBase}${app.bundleId}.json`;"
    },
    {
      "id": 47,
      "productId": "const url = await uploadToGitHub(filePath, app);"
    },
    {
      "id": 48,
      "productId": "// 订阅通知提示"
    },
    {
      "id": 49,
      "productId": "const subs = app.subscriptions.map(s => s.productId).join(\"\\n\");"
    },
    {
      "id": 50,
      "productId": "const n = new Notification();"
    },
    {
      "id": 51,
      "productId": "n.title = `上传成功：${app.name}`;"
    },
    {
      "id": 52,
      "productId": "n.body = `订阅数量：${app.subscriptions.length}\\n\\n${subs}`;"
    },
    {
      "id": 53,
      "productId": "await n.schedule();"
    },
    {
      "id": 54,
      "productId": "}"
    },
    {
      "id": 55,
      "productId": "// 可选打开仓库目录"
    },
    {
      "id": 56,
      "productId": "Safari.open(`https://github.com/${GITHUB_CONFIG.username}/${GITHUB_CONFIG.repo}/tree/main/${GITHUB_CONFIG.filePathBase}`);"
    }
  ],
  "updatedAt": "2025-05-13T10:59:30.531Z"
}