name: 安全的JS文件处理工作流

on:
  workflow_dispatch:
    inputs:
      remote_base_url:
        description: '远程基础URL'
        required: false
        default: 'https://raw.githubusercontent.com/Mikephie/AUTOjs/main/quantumultx'
      process_all:
        description: '处理所有文件(包括非JS文件)'
        required: false
        default: 'false'

  push:
    paths:
      - '**.js'
      - 'input/**'

  schedule:
    - cron: '0 3 * * *'

env:
  REMOTE_BASE_URL: 'https://raw.githubusercontent.com/Mikephie/AUTOjs/main/quantumultx'
  PROCESS_ALL: 'false'

jobs:
  process_js_files:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 设置参数
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "REMOTE_BASE_URL=${{ github.event.inputs.remote_base_url }}" >> $GITHUB_ENV
            echo "PROCESS_ALL=${{ github.event.inputs.process_all }}" >> $GITHUB_ENV
          fi

      - name: 准备目录
        run: mkdir -p quantumultx input

      - name: 复制 JS 脚本文件
        run: |
          echo "查找和复制 JS 脚本文件..."
          find input -name "*.js" -not -path "./node_modules/*" -not -path "./.git/*" > js_files.txt

          if [ ! -s js_files.txt ]; then
            echo "input目录中没有找到任何 JS 文件"
          else
            while read js_file; do
              filename=$(basename "$js_file")
              cp "$js_file" "quantumultx/$filename"
            done < js_files.txt
          fi

      - name: 查找配置文件
        run: |
          > config_files.txt
          find input -type f \( -name "*.conf" -o -name "*.txt" -o -name "*.js" \) > config_files.txt

      - name: 安全处理配置文件
        run: |
          if [ ! -s config_files.txt ]; then
            echo "没有配置文件需要处理"
            exit 0
          fi

          while read config_file; do
            filename=$(basename "$config_file")
            output_file="quantumultx/$filename"
            if grep -q "\[rewrite_local\]" "$config_file"; then
              cp "$config_file" "$output_file"

              awk '
              /script-(response|request)-body/ {
                match($0, /(script-(response|request)-body[[:space:]]+)([^[:space:]]+)/, parts);
                if (parts[3]) {
                  split(parts[3], path_parts, "/");
                  script_name = path_parts[length(path_parts)];
                  remote_url = "'"$REMOTE_BASE_URL"'/" script_name;
                  sub(parts[3], remote_url);
                  print "已替换: " parts[3] " -> " remote_url > "/dev/stderr";
                }
              }
              { print }
              ' "$output_file" > "$output_file.tmp" && mv "$output_file.tmp" "$output_file"
            fi
          done < config_files.txt

      - name: 处理 quantumultx 配置文件
        run: |
          find quantumultx -type f \( -name "*.conf" -o -name "*.txt" \) > qx_configs.txt
          if [ ! -s qx_configs.txt ]; then exit 0; fi

          while read config_file; do
            awk '
            /script-(response|request)-body/ {
              match($0, /(script-(response|request)-body[[:space:]]+)([^[:space:]]+)/, parts);
              if (parts[3] ~ /^\.\/|^\/|^[^\/]+\//) {
                split(parts[3], path_parts, "/");
                script_name = path_parts[length(path_parts)];
                remote_url = "'"$REMOTE_BASE_URL"'/" script_name;
                sub(parts[3], remote_url);
                print "已替换: " parts[3] " -> " remote_url > "/dev/stderr";
              }
            }
            { print }
            ' "$config_file" > "$config_file.tmp" && mv "$config_file.tmp" "$config_file"
          done < qx_configs.txt

      - name: 显示处理结果
        run: |
          echo "quantumultx 目录内容:"
          ls -la quantumultx/
          echo "脚本引用:"
          grep -r "script-.*-body" quantumultx/ || echo "未找到脚本引用"
          echo "远程URL引用:"
          grep -r "$REMOTE_BASE_URL" quantumultx/ || echo "未找到远程URL引用"

      - name: 提交并推送更改
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

          git add quantumultx/
          git commit -m "自动处理: JS文件和脚本引用" || echo "⚠️ 没有更改需要提交"

          echo "📥 拉取远程更改避免冲突..."
          git pull --rebase --autostash || {
            echo "❗ rebase 失败，终止流程以防冲突";
            exit 1;
          }

          echo "📤 推送到远程仓库..."
          git push || {
            echo "❗ 推送失败，可能需要人工处理";
            exit 1;
          }
